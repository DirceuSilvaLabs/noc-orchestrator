kind: Service
apiVersion: v1
metadata:
  name: sandbox-api
spec:
  selector:
    app: sandbox-api
  type: NodePort
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
    #isso nao está funcionando direito
    # TODO: Arrumar a parte do Issue para letsencrypt
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    # The ACME server URL
    server:  https://acme-v02.api.letsencrypt.org/directory
    # Email address used for ACME registration
    email: lets@dirceusilva.com
    # Name of a secret used to store the ACME account private key
    privateKeySecretRef:
      name: letsencrypt-sec-prod
    # Enable HTTP01 validations
    solvers:
    - http01:
       ingress:
         class: nginx
---
  #isso nao está funcionando direito
  # TODO: Arrumar a parte do letsencrypt
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    cert-manager.io/issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
  name: sandbox-api
spec:
  rules:
  - host: api.gita.cloud
    http:
      paths:
      - backend:
          serviceName: sandbox-api
          servicePort: 80
  tls:
  - hosts:
    - api.gita.cloud
    secretName: api-sandbox-cert




---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: sandbox-api
  name: sandbox-api-deployment
spec:
  progressDeadlineSeconds: 600
  replicas: 3
  revisionHistoryLimit: 10

  selector:
    matchLabels:
      app: sandbox-api

  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate

  template:
    metadata:
      labels:
        app: sandbox-api

    spec:
      containers:

      - image: ${CICD_IMAGE}:${CICD_EXECUTION_SEQUENCE}
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /debug
            port: 80
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 2
          successThreshold: 1
          timeoutSeconds: 2

        name: sandbox-api

        ports:

        - containerPort: 80
          name: 80tcp02
          protocol: TCP


        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /debug
            port: 80
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 2
          successThreshold: 2
          timeoutSeconds: 2


        resources:
          limits:
            cpu: "3"
            memory: 512Mi
          requests:
            cpu: "1"
            memory: 128Mi


        securityContext:
          allowPrivilegeEscalation: false
          capabilities: {}
          privileged: false

      dnsPolicy: ClusterFirst

      imagePullSecrets:
      - name: pipeline-docker-registry

      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
