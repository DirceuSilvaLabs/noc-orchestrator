
apiVersion: v1
kind: Secret
metadata:
  name: basic-auth
type: Opaque
data:
  auth: ZGVzZW52b2x2ZWRvcjokYXByMSRIWXg5akRHayRaa2VyZFdBR1NLWkNXU1JGYUVlbFIuCg==
  senha-desenvolvedor: YXNkZm85OG5qa25zZDg5YXNkbms4NzNiamRzCg==




---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sandbox-volume-projeto
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: longhorn
  volumeMode: Filesystem

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: theia-next
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    nginx.ingress.kubernetes.io/auth-realm: "Authentication Required - ide"
spec:
  rules:
  - host: ide.gita.cloud
    http:
      paths:
      - backend:
          serviceName: theia-next
          servicePort: 80
---
apiVersion: v1
kind: Service
metadata:
 name: theia-next
spec:
 ports:
 - port: 80
   targetPort: 3000
 selector:
   app: theia-next
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: theia-next
  name: theia-next
spec:
  selector:
    matchLabels:
      app: theia-next
  strategy:
    type: Recreate
  replicas: 2
  template:
    metadata:
      labels:
        app: theia-next
    spec:
      securityContext:
        runAsUser: 1001
        fsGroup: 1001
      volumes:
      - name: sandbox-volume-projeto
        persistentVolumeClaim:
          claimName: sandbox-volume-projeto


      containers:
      - image: theiaide/theia:next
        imagePullPolicy: Always
        name: theia-next
        ports:
        - containerPort: 3000
        volumeMounts:
        - mountPath: /home/project/
          name: sandbox-volume-projeto
