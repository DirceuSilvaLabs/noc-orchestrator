{
  "name": "angular-cli",
  "version": "1.0.0-beta.5",
  "description": "CLI tool for Angular",
  "main": "lib/cli/index.js",
  "trackingCode": "UA-8594346-19",
  "bin": {
    "ng": "./bin/ng"
  },
  "keywords": [],
  "scripts": {
    "test": "node tests/runner",
    "lint": "eslint ."
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/angular/angular-cli.git"
  },
  "engines": {
    "node": ">= 4.1.0"
  },
  "author": {
    "name": "Angular Authors"
  },
  "contributors": [
    {
      "name": "Rody Haddad",
      "email": "npm@rodyhaddad.com",
      "url": "http://rodyhaddad.com/"
    },
    {
      "name": "Igor Minar",
      "email": "igor@angularjs.org"
    }
  ],
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/angular/angular-cli/issues"
  },
  "homepage": "https://github.com/angular/angular-cli",
  "dependencies": {
    "broccoli": "^1.0.0-beta.7",
    "broccoli-caching-writer": "^2.2.1",
    "broccoli-concat": "^2.2.0",
    "broccoli-funnel": "^1.0.1",
    "broccoli-merge-trees": "^1.1.1",
    "broccoli-source": "^1.1.0",
    "broccoli-uglify-js": "^0.1.3",
    "broccoli-writer": "^0.1.1",
    "chalk": "^1.1.3",
    "ember-cli": "2.5.0",
    "ember-cli-string-utils": "^1.0.0",
    "exit": "^0.1.2",
    "fs-extra": "^0.30.0",
    "glob": "^7.0.3",
    "handlebars": "^4.0.5",
    "leek": "0.0.21",
    "lodash": "^4.11.1",
    "opn": "4.0.1",
    "resolve": "^1.1.7",
    "shelljs": "^0.7.0",
    "silent-error": "^1.0.0",
    "symlink-or-copy": "^1.0.3",
    "systemjs-builder": "0.15.17",
    "typescript": "^1.8.10",
    "typings": "^0.8.1"
  },
  "ember-addon": {
    "paths": [
      "./addon/ng2/"
    ]
  },
  "devDependencies": {
    "chai": "^3.5.0",
    "eslint": "^2.8.0",
    "exists-sync": "0.0.3",
    "minimatch": "^3.0.0",
    "mocha": "^2.4.5",
    "mock-fs": "^3.8.0",
    "object-assign": "^4.0.1",
    "rewire": "^2.5.1",
    "sinon": "^1.17.3",
    "through": "^2.3.8",
    "tslint": "^3.8.1",
    "walk-sync": "^0.2.6"
  },
  "readme": "## Angular-CLI\n\n[![Join the chat at https://gitter.im/angular/angular-cli](https://badges.gitter.im/angular/angular-cli.svg)](https://gitter.im/angular/angular-cli?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n[![Build Status][travis-badge]][travis-badge-url]\n[![Dependency Status][david-badge]][david-badge-url]\n[![devDependency Status][david-dev-badge]][david-dev-badge-url]\n[![npm][npm-badge]][npm-badge-url]\n\nPrototype of a CLI for Angular 2 applications based on the [ember-cli](http://www.ember-cli.com/) project.\n\n## Note\n\nThis project is very much still a work in progress.\n\nWe still have a long way before getting out of our alpha stage.\nIf you wish to collaborate while the project is still young, check out [our issue list](https://github.com/angular/angular-cli/issues).\n\n## Prerequisites\n\nThe generated project has dependencies that require **Node 4 or greater**.\n\n## Table of Contents\n\n* [Installation](#installation)\n* [Usage](#usage)\n* [Generating a New Project](#generating-and-serving-an-angular2-project-via-a-development-server)\n* [Generating Components, Directives, Pipes and Services](#generating-other-scaffolds)\n* [Generating a Route](#generating-a-route)\n* [Creating a Build](#creating-a-build)\n* [Running Unit Tests](#running-unit-tests)\n* [Running End-to-End Tests](#running-end-to-end-tests)\n* [Deploying the App via GitHub Pages](#deploying-the-app-via-github-pages)\n* [Linting and formatting code](#linting-and-formatting-code)\n* [Support for offline applications](#support-for-offline-applications)\n* [Commands autocompletion](#commands-autocompletion)\n* [CSS preprocessor integration](#css-preprocessor-integration)\n* [3rd Party Library Installation](#3rd-party-library-installation)\n* [Known Issues](#known-issues)\n\n## Installation\n\n**BEFORE YOU INSTALL:** please read the [prerequisites](#prerequisites)\n```bash\nnpm install -g angular-cli\n```\n\n## Usage\n\n```bash\nng --help\n```\n\n### Generating and serving an Angular2 project via a development server\n\n```bash\nng new PROJECT_NAME\ncd PROJECT_NAME\nng serve\n```\nNavigate to `http://localhost:4200/`. The app will automatically reload if you change any of the source files.\n\nYou can configure the default HTTP port and the one used by the LiveReload server with two command-line options :\n\n```bash\nng serve --port 4201 --live-reload-port 49153\n```\n\n### Generating other scaffolds\n\nYou can use the `ng generate` (or just `ng g`) command to generate Angular components:\n\n```bash\nng generate component my-new-component\nng g component my-new-component # using the alias\n\n# components support relative path generation\n# if in the directory src/app/feature/ and you run\nng g component new-cmp\n# your component will be generated in src/app/feature/new-cmp\n# but if you were to run\nng g component ../newer-cmp\n# your component will be generated in src/app/newer-cmp\n```\nYou can find all possible blueprints in the table below:\n\nScaffold  | Usage\n---       | ---\nComponent | `ng g component my-new-component`\nDirective | `ng g directive my-new-directive`\nPipe      | `ng g pipe my-new-pipe`\nService   | `ng g service my-new-service`\n\n### Generating a route\n\nYou can generate a new route by with the following command (note the singular\nused in `hero`):\n\n```bash\nng generate route hero\n```\n\nThis will create a folder which will contain the hero component and related test and style files.\n\nThe generated route will also be registered with the parent component's `@RouteConfig` decorator. \n\nBy default the route will be designated as a **lazy** route which means that it will be loaded into the browser when needed, not upfront as part of a bundle.\n\nIn order to visually distinguish lazy routes from other routes the folder for the route will be prefixed with a `+` per the above example the folder will be named `+hero`.\nThis is done in accordance with the [style guide](https://angular.io/styleguide#!#prefix-lazy-loaded-folders-with-).\n\nThe default lazy nature of routes can be turned off via the lazy flag (`--lazy false`)\n\nThere is an optional flag for `skip-router-generation` which will not add the route to the parent component's `@RouteConfig` decorator.\n\n### Creating a build\n\n```bash\nng build\n```\n\nThe build artifacts will be stored in the `dist/` directory.\n\n### Environments\n\nAt build time, the `src/client/app/environment.ts` will be replaced by either\n`config/environment.dev.ts` or `config/environment.prod.ts`, depending on the\ncurrent cli environment.\n\nEnvironment defaults to `dev`, but you can generate a production build via\nthe `-prod` flag in either `ng build -prod` or `ng serve -prod`.\n\n### Running unit tests\n\n```bash\nng test\n```\n\nTests will execute after a build is executed via [Karma](http://karma-runner.github.io/0.13/index.html)\n\nIf run with the watch argument `--watch` (shorthand `-w`) builds will run when source files have changed\nand tests will run after each successful build\n\n\n### Running end-to-end tests\n\n```bash\nng e2e\n```\n\nBefore running the tests make sure you are serving the app via `ng serve`.\n\nEnd-to-end tests are ran via [Protractor](https://angular.github.io/protractor/).\n\n\n### Deploying the app via GitHub Pages\n\nYou can deploy your apps quickly via:\n\n```\nng github-pages:deploy --message \"Optional commit message\"\n```\n\nThis will do the following:\n\n- creates GitHub repo for the current project if one doesn't exist\n- rebuilds the app in production mode at the current `HEAD`\n- creates a local `gh-pages` branch if one doesn't exist\n- moves your app to the `gh-pages` branch and creates a commit\n- edit the base tag in index.html to support github pages\n- pushes the `gh-pages` branch to github\n- returns back to the original `HEAD`\n\nCreating the repo requires a token from github, and the remaining functionality\nrelies on ssh authentication for all git operations that communicate with github.com.\nTo simplify the authentication, be sure to [setup your ssh keys](https://help.github.com/articles/generating-ssh-keys/).\n\nIf you are deploying a [user or organization page](https://help.github.com/articles/user-organization-and-project-pages/), you can instead use the following command:\n\n```\nng github-pages:deploy --user-page --message \"Optional commit message\"\n```\n\nThis command pushes the app to the `master` branch on the github repo instead\nof pushing to `gh-pages`, since user and organization pages require this.\n\n\n### Linting and formatting code\n\nYou can lint your app code by running `ng lint`.\nThis will use the `lint` npm script that in generated projects uses `tslint`.\n\nYou can modify the these scripts in `package.json` to run whatever tool you prefer.\n\n### Support for offline applications\n\nThe index.html file includes a commented-out code snippet for installing the angular2-service-worker. This support is experimental, please see the angular/mobile-toolkit project for documentation on how to make use of this functionality.\n\n### Commands autocompletion\n\nTo turn on auto completion use the following commands:\n\nFor bash:\n```bash\nng completion >> ~/.bashrc\nsource ~/.bashrc\n```\n\nFor zsh:\n```bash\nng completion >> ~/.zshrc\nsource ~/.zshrc\n```\n\nWindows users using gitbash:\n```bash\nng completion >> ~/.bash_profile\nsource ~/.bash_profile\n```\n\n\n### CSS Preprocessor integration\n\nWe support all major CSS preprocessors:\n- sass (node-sass)\n- less (less)\n- compass (compass-importer + node-sass)\n- stylus (stylus)\n\nTo use one just install for example `npm install node-sass` and rename `.css` files in your project to `.scss` or `.sass`. They will be compiled automatically.\n\nThe `Angular2App`'s options argument has `sassCompiler`, `lessCompiler`, `stylusCompiler` and `compassCompiler` options that are passed directly to their respective CSS preprocessors.\n\n### 3rd Party Library Installation\n\nThe installation of 3rd party libraries are well described at our [Wiki Page](https://github.com/angular/angular-cli/wiki/3rd-party-libs)\n\n## Known issues\n\nThis project is currently a prototype so there are many known issues. Just to mention a few:\n\n- All blueprints/scaffolds are in TypeScript only, in the future blueprints in all dialects officially supported by Angular will be available.\n- On Windows you need to run the `build` and `serve` commands with Admin permissions, otherwise the performance is not good.\n- [Protractor](https://angular.github.io/protractor/) integration is missing.\n- The initial installation as well as `ng new` take too long because of lots of npm dependencies.\n- Many existing ember addons are not compatible with Angular apps built via angular-cli.\n- When you `ng serve` remember that the generated project has dependencies that require **Node 4 or greater**.\n\n\n## Development Hints for hacking on angular-cli\n\n### Working with master\n\n```bash\ngit clone https://github.com/angular/angular-cli.git\ncd angular-cli\nnpm link\n```\n\n`npm link` is very similar to `npm install -g` except that instead of downloading the package\nfrom the repo, the just cloned `angular-cli/` folder becomes the global package.\nAny changes to the files in the `angular-cli/` folder will immediately affect the global `angular-cli` package,\nallowing you to quickly test any changes you make to the cli project.\n\nNow you can use `angular-cli` via the command line:\n\n```bash\nng new foo\ncd foo\nnpm link angular-cli\nng server\n```\n\n`npm link angular-cli` is needed because by default the globally installed `angular-cli` just loads\nthe local `angular-cli` from the project which was fetched remotely from npm.\n`npm link angular-cli` symlinks the global `angular-cli` package to the local `angular-cli` package.\nNow the `angular-cli` you cloned before is in three places:\nThe folder you cloned it into, npm's folder where it stores global packages and the `angular-cli` project you just created.\n\nPlease read the official [npm-link documentation](https://www.npmjs.org/doc/cli/npm-link.html)\nand the [npm-link cheatsheet](http://browsenpm.org/help#linkinganynpmpackagelocally) for more information.\n\n\n## License\n\nMIT\n\n\n[travis-badge]: https://travis-ci.org/angular/angular-cli.svg?branch=master\n[travis-badge-url]: https://travis-ci.org/angular/angular-cli\n[david-badge]: https://david-dm.org/angular/angular-cli.svg\n[david-badge-url]: https://david-dm.org/angular/angular-cli\n[david-dev-badge]: https://david-dm.org/angular/angular-cli/dev-status.svg\n[david-dev-badge-url]: https://david-dm.org/angular/angular-cli#info=devDependencies\n[npm-badge]: https://img.shields.io/npm/v/angular-cli.svg\n[npm-badge-url]: https://www.npmjs.com/package/angular-cli\n",
  "readmeFilename": "README.md",
  "_id": "angular-cli@1.0.0-beta.5",
  "_from": "angular-cli@>=1.0.0-beta.5 <2.0.0"
}
